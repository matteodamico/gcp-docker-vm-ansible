- name: Create an instance
  hosts:  local
  gather_facts: no
  vars:
      gcp_project: "{{ lookup('env','GCP_PROJECT') }}"
      gcp_cred_kind: serviceaccount
      gcp_cred_file: ~/keys/saccount.json
      zone: "us-central1-a"
      region: "us-central1"
      scope: "{{ lookup('env','GCP_SCOPES') }}"
  tasks:
  - name: create a disk
    gcp_compute_disk:
      name: disk-instance
      size_gb: 50
      source_image: projects/centos-cloud/global/images/centos-7-v20200811 #projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts
      zone: "{{ zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: disk
  
  - name: create a disk2
    gcp_compute_disk:
      name: disk-instance2
      size_gb: 50
      source_image: projects/centos-cloud/global/images/centos-7-v20200811 #projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts
      zone: "{{ zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: disk2

  - name: create a address
    gcp_compute_address:
      name: address-instance
      region: "{{ region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: address



  - name: Print address
    debug: 
      msg: "{{ address.address }}"

  - name: create a instance
    gcp_compute_instance:
      name: instance1
      machine_type: n1-standard-1 #oppure e2-small 
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk }}"
      network_interfaces:
      - network: null
        access_configs:
        - name: External NAT
          nat_ip: "{{ address }}"
          type: ONE_TO_ONE_NAT
      zone: "{{ zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
           - https://www.googleapis.com/auth/compute
      state: present
        
#  - name: Wait for SSH to come up
#    wait_for: host={{ address.address }} port=22 delay=10 timeout=60
    
  - name: Add host to groupname
    add_host: hostname={{ address.address }} groupname=new_instances

    
  - name: create a address2
    gcp_compute_address:
      name: address-instance2
      region: "{{ region }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      state: present
    register: address2
    
  - name: create second instance
    gcp_compute_instance:
      name: instance2
      machine_type: n1-standard-1 #oppure e2-small 
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "{{ disk2 }}"
      network_interfaces:
      - network: null
        access_configs:
        - name: External NAT
          nat_ip: "{{ address2 }}"
          type: ONE_TO_ONE_NAT
      zone: "{{ zone }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
           - https://www.googleapis.com/auth/compute
      state: present
   

#  - name: Wait for SSH to come up
#    wait_for: host={{ address2.address }} port=22 delay=10 timeout=60
    
  - name: Add host to groupname
    add_host: hostname={{ address2.address }} groupname=new_instances




#- name: Manage new instances
#  hosts: new_instances
#  connection: ssh
#  sudo: True
#  roles:
#    - base_configuration
#    - production_server

- name: docker setting
  hosts: "new_instances"
  become: true
  roles:
    - role: "nickjj.docker"
      tags: ["docker"]
